# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  formater:
    name: Golang Formatter
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 0
    - name: Golang Formatter
      uses: sladyn98/auto-go-format@master
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS }}
    - name: Linter check
      uses: Jerome1337/golint-action@v1.0.1
      with:
        golint-path: './src/...'
  build:
    name: Build
    runs-on: debian-latest
    steps:

    - name: Set up Go 1.14.2
      uses: actions/setup-go@v1
      with:
        go-version: 1.14.2
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v .

  releases-matrix:
    name: Release Go Binary
    runs-on: debian-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/386, darwin/amd64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64]
    steps:
    - uses: actions/checkout@master
    - uses: wangyoucao577/go-release-action@master
      with:
        github_token: ${{ secrets.ACTIONS }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go1.13.1.linux-amd64.tar.gz"
        project_path: "./cmd/test-binary"
        binary_name: "test-binary"
  # docker-publish:
  #   runs-on: debian-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: Publish to Registry
  #     uses: elgohr/Publish-Docker-Github-Action@master
  #     with:
  #       name: ${{ secrets.DOCKER_USERNAME }}/json_exporter
  #       username: ${{ secrets.DOCKER_USERNAME }}
  #       password: ${{ secrets.DOCKER_PASSWORD }}
